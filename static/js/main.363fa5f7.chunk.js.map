{"version":3,"sources":["assets/logo.svg","pages/Home/index.tsx","services/api.ts","pages/CreatePoint/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","CreatePoint","useState","items","setItems","initialPosition","Ufs","setUfs","Cities","setCities","name","email","whatsapp","formData","setFormData","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItems","setSelectedItems","selectedPosition","setSelectedPosition","history","useHistory","handleInputChange","event","target","value","a","preventDefault","uf","city","latitude","longitude","data","console","log","post","alert","push","useEffect","navigator","geolocation","getCurrentPosition","position","coords","get","then","response","ufInitials","map","sigla","cities","nome","onSubmit","htmlFor","type","onChange","Map","center","zoom","onClick","latlng","lat","lng","TileLayer","attribution","url","Marker","key","item","findIndex","filteredItems","filter","handleSelectItem","includes","image_url","title","Routes","component","path","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,kC,uOC8B5BC,EAtBF,WACX,OACE,yBAAKC,GAAG,aACN,yBAAKC,UAAU,WACb,gCACE,yBAAKC,IAAKC,IAAMC,IAAI,aAGtB,8BACE,yEACA,kGAEA,kBAAC,IAAD,CAAMC,GAAG,iBACP,kCAAO,kBAAC,IAAD,MAAP,KACA,mE,kGChBGC,EAJHC,IAAMC,OAAO,CACvBC,QAAS,0BCoQIC,G,MA5NK,WAAO,IAAD,EACEC,mBAAiB,IADnB,mBACjBC,EADiB,KACVC,EADU,OAEsBF,mBAA2B,EAAE,YAAY,aAF/D,mBAEjBG,EAFiB,aAIFH,mBAAmB,KAJjB,mBAIjBI,EAJiB,KAIZC,EAJY,OAKIL,mBAAmB,IALvB,mBAKjBM,EALiB,KAKTC,EALS,OAMQP,mBAAS,CACvCQ,KAAM,GACNC,MAAO,GACPC,SAAU,KATY,mBAMjBC,EANiB,KAMPC,EANO,OAYYZ,mBAAS,KAZrB,mBAYjBa,EAZiB,KAYLC,EAZK,OAagBd,mBAAS,KAbzB,mBAajBe,EAbiB,KAaHC,EAbG,OAckBhB,mBAAmB,IAdrC,mBAcjBiB,EAdiB,KAcFC,EAdE,OAewBlB,mBAA2B,CAAC,EAAG,IAfvD,mBAejBmB,EAfiB,KAeCC,EAfD,KAiBlBC,EAAUC,cAuDhB,SAASC,EAAkBC,GAAuC,IAAD,EACvCA,EAAMC,OAAtBjB,EADuD,EACvDA,KAAMkB,EADiD,EACjDA,MACdd,EAAY,2BAAKD,GAAN,kBAAiBH,EAAOkB,KA1Eb,8CAyFxB,WAA4BF,GAA5B,+BAAAG,EAAA,6DACEH,EAAMI,iBAEEpB,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SACfmB,EAAKhB,EACLiB,EAAOf,EALf,cAMgCI,EANhC,GAMSY,EANT,KAMmBC,EANnB,KASQC,EAAO,CACXzB,OACAC,QACAC,WACAmB,KACAC,OACAC,WACAC,YACA/B,MAVYgB,GAadiB,QAAQC,IAAIF,GApBd,UAsBQtC,EAAIyC,KAAK,SAAUH,GAtB3B,QAwBEI,MAAM,2BAENhB,EAAQiB,KAAK,KA1Bf,6CAzFwB,sBAsHxB,OAnGAC,qBAAU,WAERC,UAAUC,YAAYC,oBAAmB,SAAAC,GAAa,IAAD,EACnBA,EAASC,OADU,EAC3Cb,SAD2C,EACjCC,eAGnB,IAEHO,qBAAU,WACR5C,EAAIkD,IAAI,SAASC,MAAM,SAAAC,GACrB7C,EAAS6C,EAASd,WAEnB,IAEHM,qBAAU,WACR3C,IACGiD,IAAc,+DACZC,MAAK,SAAAC,GACJ,IAAMC,EAAaD,EAASd,KAAKgB,KAAI,SAAApB,GAAE,OAAIA,EAAGqB,SAC9C7C,EAAO2C,QAEZ,IAEHT,qBAAU,WACW,MAAf1B,GAIJjB,IACGiD,IADH,sEACoFhC,EADpF,gBAEKiC,MAAK,SAAAC,GACJ,IAAMI,EAASJ,EAASd,KAAKgB,KAAI,SAAAnB,GAAI,OAAIA,EAAKsB,QAC9C7C,EAAU4C,QAEf,CAACtC,IAkEF,yBAAKxB,GAAG,qBACN,gCACE,yBAAKE,IAAKC,IAAMC,IAAI,YAEpB,kBAAC,IAAD,CAAMC,GAAG,KACP,kCAAO,kBAAC,IAAD,MAAP,KACA,wDAIJ,0BAAM2D,SAjIc,8CAmIlB,2CAAgB,6BAAhB,oBAEA,kCACE,gCACE,sCAGF,yBAAK/D,UAAU,SACb,2BAAOgE,QAAQ,QAAf,oBACA,2BAAOC,KAAK,OAAO/C,KAAK,OAAOnB,GAAG,OAAOmE,SAAUjC,KAGrD,yBAAKjC,UAAU,eACb,yBAAKA,UAAU,SACb,2BAAOgE,QAAQ,SAAf,UACA,2BAAOC,KAAK,OAAO/C,KAAK,QAAQnB,GAAG,QAAQmE,SAAUjC,KAEvD,yBAAKjC,UAAU,SACb,2BAAOgE,QAAQ,YAAf,YACA,2BAAOC,KAAK,OAAO/C,KAAK,WAAWnB,GAAG,WAAWmE,SAAUjC,OAMjE,kCACE,gCACE,2CACA,kEAGF,kBAACkC,EAAA,EAAD,CAAKC,OAAQvD,EAAiBwD,KAAM,GAAIC,QAjGhD,SAAwBpC,GACtBJ,EAAoB,CAClBI,EAAMqC,OAAOC,IACbtC,EAAMqC,OAAOE,QA+FP,kBAACC,EAAA,EAAD,CACEC,YAAY,0EACZC,IAAI,uDAGN,kBAACC,EAAA,EAAD,CAAQxB,SAAUxB,KAGpB,yBAAK7B,UAAU,eACb,yBAAKA,UAAU,SACb,2BAAOgE,QAAQ,MAAf,eACA,4BAAQ9C,KAAK,KAAKnB,GAAG,KAAKqC,MAAOb,EAAY2C,SAvHzD,SAAwBhC,GACtB,IAAMK,EAAKL,EAAMC,OAAOC,MACxBZ,EAAce,KAsHF,4BAAQH,MAAM,KAAd,oBACCtB,EAAI6C,KAAI,SAAApB,GAAE,OACT,4BAAQuC,IAAKvC,EAAIH,MAAOG,GAAKA,QAInC,yBAAKvC,UAAU,SACb,2BAAOgE,QAAQ,QAAf,UACA,4BAAQ9C,KAAK,OAAOnB,GAAG,OAAOqC,MAAOX,EAAcyC,SA3H/D,SAA0BhC,GACxB,IAAMM,EAAON,EAAMC,OAAOC,MAC1BV,EAAgBc,KA0HJ,4BAAQJ,MAAM,KAAd,wBACCpB,EAAO2C,KAAI,SAAAnB,GAAI,OACd,4BAAQsC,IAAKtC,EAAMJ,MAAOI,GAAOA,UAQ3C,kCACE,gCACE,kDACA,uEAGF,wBAAIxC,UAAU,cACXW,EAAMgD,KAAK,SAAAoB,GAAI,OACd,wBAAID,IAAKC,EAAKhF,GAAIuE,QAAS,kBA7HvC,SAA0BvE,GAGxB,GAFwB4B,EAAcqD,WAAU,SAAAD,GAAI,OAAIA,IAAShF,MAE1C,EAAG,CACxB,IAAMkF,EAAgBtD,EAAcuD,QAAO,SAAAH,GAAI,OAAIA,IAAShF,KAE5D6B,EAAiBqD,QAEjBrD,EAAiB,GAAD,mBAAMD,GAAN,CAAqB5B,KAqHIoF,CAAiBJ,EAAKhF,KACrDC,UAAW2B,EAAcyD,SAASL,EAAKhF,IAAM,WAAa,IAE1D,yBAAKE,IAAK8E,EAAKM,UAAWlF,IAAK4E,EAAKO,QACpC,8BAAOP,EAAKO,aAOpB,4BAAQrB,KAAK,UAAb,iCCjPOsB,EATA,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,UAAW1F,EAAM2F,KAAK,IAAIC,OAAK,IACtC,kBAAC,IAAD,CAAOF,UAAW/E,EAAagF,KAAK,oBCE3BE,MAPf,WAEE,OACE,kBAAC,EAAD,OCJJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.363fa5f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from 'react';\nimport { FiLogIn } from \"react-icons/fi\";\nimport { Link } from 'react-router-dom';\n\nimport './styles.css'\n\nimport logo from '../../assets/logo.svg';\n\nconst Home = () => {\n  return (\n    <div id=\"page-home\">\n      <div className=\"content\">\n        <header>\n          <img src={logo} alt=\"Ecoleta\" />\n        </header>\n\n        <main>\n          <h1>Seu marketplace de coleta de res√≠duos.</h1>\n          <p>Ajudamos pessoas a encontrarem pontos de coleta de forma eficiente.</p>\n\n          <Link to=\"/create-point\">\n            <span> <FiLogIn /> </span>\n            <strong>Pesquisar pontos de coleta</strong>\n          </Link>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333'\n});\n\nexport default api;","import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport axios from 'axios';\nimport { LeafletMouseEvent } from 'leaflet';\nimport api from '../../services/api';\n\nimport './styles.css';\n\nimport logo from '../../assets/logo.svg';\n\ninterface Item {\n  id: number;\n  title: string;\n  image_url: string;\n}\n\ninterface IBGEUF {\n  id: number;\n  nome: string;\n  sigla: string;\n  regiao: {\n    id: number;\n    nome: string;\n    sigla: string;\n  }\n}\n\ninterface IBGECidade {\n  id: number;\n  nome: string;\n  microrregiao: {\n    id: number;\n    nome: string;\n    mesorregiao: {\n      id: number;\n      nome: string;\n      UF: IBGEUF;\n    }\n  }\n}\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState<Item[]>([]);\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([-23.4039747,-51.4414278]);\n\n  const [Ufs, setUfs] = useState<string[]>([]);\n  const [Cities, setCities] = useState<string[]>([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\n  const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    // Revisar para o firefox\n    navigator.geolocation.getCurrentPosition(position => {\n      const { latitude, longitude } = position.coords;\n      // setInitialPosition([latitude, longitude]);\n    })\n  }, []);\n\n  useEffect(() => {\n    api.get('items').then( response => {\n      setItems(response.data);\n    })\n  }, []);\n\n  useEffect(() => {\n    axios\n      .get<IBGEUF[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\n        .then(response => {\n          const ufInitials = response.data.map(uf => uf.sigla);\n          setUfs(ufInitials);\n        })\n  }, []);\n\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios\n      .get<IBGECidade[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\n        .then(response => {\n          const cities = response.data.map(city => city.nome);\n          setCities(cities);\n        })\n  }, [selectedUf]);\n  \n  function handleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\n    const uf = event.target.value; \n    setSelectedUf(uf);\n  }\n\n  function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\n    const city = event.target.value; \n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event: LeafletMouseEvent) {\n    setSelectedPosition([\n      event.latlng.lat,\n      event.latlng.lng\n    ]);\n  }\n\n  function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  }\n\n  function handleSelectItem(id: number) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([ ...selectedItems, id ]);\n    }\n  }\n\n  async function handleSubmit(event: FormEvent) {\n    event.preventDefault();\n\n    const { name, email, whatsapp } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      latitude,\n      longitude,\n      items\n    };\n\n    console.log(data);\n\n    await api.post('points', data);\n\n    alert('Ponto de coleta criado!');\n\n    history.push('/');\n  }\n\n  return (\n    <div id=\"page-create-point\">\n      <header>\n        <img src={logo} alt=\"Ecoleta\" />\n\n        <Link to=\"/\">\n          <span> <FiArrowLeft /> </span>\n          <strong>Voltar para a home</strong>\n        </Link>\n      </header>\n\n      <form onSubmit={handleSubmit}>\n        \n        <h1>Cadastro do <br/> ponto de coleta</h1>\n\n        <fieldset>\n          <legend>\n            <h2>Dados</h2>\n          </legend>\n\n          <div className=\"field\">\n            <label htmlFor=\"name\">Nome da entidade</label>\n            <input type=\"text\" name=\"name\" id=\"name\" onChange={handleInputChange} />\n          </div>\n\n          <div className=\"field-group\">\n            <div className=\"field\">\n              <label htmlFor=\"email\">E-mail</label>\n              <input type=\"text\" name=\"email\" id=\"email\" onChange={handleInputChange} />\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"whatsapp\">Whatsapp</label>\n              <input type=\"text\" name=\"whatsapp\" id=\"whatsapp\" onChange={handleInputChange} />\n            </div>\n          </div>\n\n        </fieldset>\n\n        <fieldset>\n          <legend>\n            <h2>Endere√ßo</h2>\n            <span>Selecione o endere√ßo no mapa</span>\n          </legend>\n\n          <Map center={initialPosition} zoom={15} onClick={handleMapClick} >\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n\n            <Marker position={selectedPosition} />\n          </Map>\n\n          <div className=\"field-group\">\n            <div className=\"field\">\n              <label htmlFor=\"uf\">Estado (UF)</label>\n              <select name=\"uf\" id=\"uf\" value={selectedUf} onChange={handleSelectUf}>\n                <option value=\"0\">Selecione uma UF</option>\n                {Ufs.map(uf => (\n                  <option key={uf} value={uf}>{uf}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"city\">Cidade</label>\n              <select name=\"city\" id=\"city\" value={selectedCity} onChange={handleSelectCity}>\n                <option value=\"0\">Selecione uma cidade</option>\n                {Cities.map(city => (\n                  <option key={city} value={city}>{city}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n        </fieldset>\n\n        <fieldset>\n          <legend>\n            <h2>√çtens de coleta</h2>\n            <span>Selecione um ou mais √≠tens abaixo</span>\n          </legend>\n\n          <ul className=\"items-grid\">\n            {items.map( item => (\n              <li key={item.id} onClick={() => handleSelectItem(item.id)} \n                className={selectedItems.includes(item.id) ? 'selected' : ''} \n              >\n                <img src={item.image_url} alt={item.title} />\n                <span>{item.title}</span>\n              </li>\n            ))}\n          </ul>\n\n        </fieldset>\n        \n        <button type=\"submit\">Cadastrar ponto de coleta</button>\n\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePoint;","import React from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport CreatePoint from './pages/CreatePoint';\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Route component={Home} path=\"/\" exact />\n      <Route component={CreatePoint} path=\"/create-point\" />\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;","import React from 'react';\nimport './App.css';\n\nimport Routes from './routes';\n\nfunction App() {\n\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}